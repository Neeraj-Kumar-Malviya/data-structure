#include <stdio.h>
#include <stdbool.h>
#define n 5
int queue[n] ;
int rear=-1;
int front=-1;
int main()
{
    int enqueue();
    int dequeue();
    void peek();
    void display();

int choice;

while(true)
{
    printf("enter your choice\n");
        printf("1.enqueue\n");
    printf("2.dequeue\n");
    printf("3.display\n");
        printf("4.peek\n");

   // printf("enter your choice");

    scanf("%d",&choice);
    
    switch(choice)
    {
        case 1:
        enqueue();
        break;
        case 2:
        dequeue();
        break;
        case 3:
        display();
        break;
        case 4:
        peek();
        break;
        default:
        printf("invalid choice\n");
    }
}
    return 0;
}
   

int enqueue()
{
    if(rear==n-1)
    {
        printf("queue is full\n");
    }
    else if(rear==-1 && front==-1)
    {
        rear++;
       front++;
        int data;
    printf("enter data for inserting in the queue\n");
    scanf("%d",&data);
    queue[rear]=data;
    return rear;
    }
    else
    {
         rear++;
     
        int data;
    printf("enter data for inserting in the queue\n");
    scanf("%d",&data);
    queue[rear]=data;
    return rear;
    }
   
    
}

int dequeue()
{
  if(rear==-1 && front==-1)
  {
      printf("queue is empty\n");
      return front;
  }
  else if(rear==front)
  {
      rear=-1;
      front=-1;
      return front;
  }
  else
  {
      front++;
      return front;
  }
    
}

void peek()
{
    if(rear==-1 && front==-1)
    {
        printf("queue is empty\n");
    }
    else
    {
        printf("peek element is --> %d\n",queue[front]);
    }
}

void display()
{
    if(rear==-1 && front==-1)
    {
        printf("queue is empty\n");
    }
    else
    {
            printf("queue elements are:\n");

        for(int i=front;i<rear+1;i++)
    {
        printf("%d\n",queue[i]);
    } 
    }
   
}


